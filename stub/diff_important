--- xoutput4	2006-08-01 13:30:50.000000000 -0400
+++ output4	2006-08-01 13:07:33.000000000 -0400
@@ -345,12 +345,12 @@
   /* Here if argument TypeFixnum */
   t6 = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   /* compute 64-bit result */
-  t5 = (u64)((s32)t2 + (s32)t4); /* addl/v */
-  if (t5 >> 32)
-    exception();
+  t5 = (s64)(s32)t2 + (s64)(s32)t4; /* addl/v */
+  if (t5 >> 31)
+    exception(1, t5);
   t7 = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   /* Semi-cheat, we know temp2 has CDRNext/TypeFixnum */
   *(u32 *)(iSP + 4) = t9;
   iPC = t6;
@@ -408,7 +408,7 @@
   if (_trace) printf("g6697:\n");
   ADDS(0, f0, 1, f1, 2, f2); /* adds */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   t8 = Type_SingleFloat;
@@ -2515,7 +2515,7 @@
   if (_trace) printf("equalnumbermmexcfltflt:\n");
   SETFLTT(3,f3, FLTU64(1,f1) == FLTU64(2,f2) ? 2.0:0);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iSP = (t7 * 8) + iSP;
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
@@ -2740,12 +2740,12 @@
   /* Here if argument TypeFixnum */
   t6 = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   /* compute 64-bit result */
-  t5 = (u64)((s32)t2 - (s32)t4); /* subl/v */
-  if (t5 >> 32)
-    exception();
+  t5 = (s64)(s32)t2 - (s64)(s32)t4; /* subl/v */
+  if (t5 >> 31)
+    exception(2, t5);
   t7 = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   /* Semi-cheat, we know temp2 has CDRNext/TypeFixnum */
   *(u32 *)(iSP + 4) = t9;
   iPC = t6;
@@ -2803,7 +2803,7 @@
   if (_trace) printf("g6868:\n");
   SUBS(0, f0, 1, f1, 2, f2); /* subs */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   t8 = Type_SingleFloat;
@@ -3496,7 +3496,7 @@
   if (_trace) printf("lesspmmexcfltflt:\n");
   SETFLTT(3,f3, FLTU64(1,f1) < FLTU64(2,f2) ? 2.0:0);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iSP = (t7 * 8) + iSP;
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
@@ -3652,7 +3652,7 @@
   LDS(2, f2, processor->sfp1);
   SUBS(0, f0, 1, f1, 2, f2); /* subs */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   /* Put the floating result */
@@ -3857,7 +3857,7 @@
   LDS(2, f2, processor->sfp1);
   ADDS(0, f0, 1, f1, 2, f2); /* adds */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   /* Put the floating result */
--- xoutput10	2006-08-01 13:30:51.000000000 -0400
+++ output10	2006-08-01 13:18:19.000000000 -0400
@@ -83,7 +83,7 @@
   /* NIL */
   SUBS(0, f0, 3, f31, 1, f1); /* subs */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = t6;
   /* Semi-cheat, we know t5 has CDRNext/TypeSingleFloat */
   *(u32 *)(iSP + 12) = t5;
@@ -202,12 +202,14 @@
   t6 = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   /* compute 64-bit result */
   /* compute 64-bit result */
-  t5 = (u64)((s32)t2 * (s32)t4); /* mull/v */
-  if (t5 >> 32)
-    exception();
+//  t5 = (u64)((s32)t2 * (s32)t4); /* mull/v */
+  t5 = (s64)(s32)t2 * (s64)(s32)t4; /* mull/v */
+//  if (t5 >> 31)
+//    exception(3, t5);
   t7 = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  CHECK_OFLO32(t5);
+  /* trapb */
   /* Semi-cheat, we know temp2 has CDRNext/TypeFixnum */
   *(u32 *)(iSP + 4) = t9;
   iPC = t6;
@@ -265,7 +267,7 @@
   if (_trace) printf("g7494:\n");
   MULS(0, f0, 1, f1, 2, f2); /* muls */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   t8 = Type_SingleFloat;
@@ -779,9 +781,10 @@
   /* Here if argument TypeFixnum */
   DIVT(0, f0, 1, f1, 2, f2);
   CVTTQVC(0, f0, f31, 0, f0);
+CHECK_OFLO32(f0);
   CVTQLV(0, f0, f31, 0, f0);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -804,7 +807,7 @@
   /* Here if argument TypeSingleFloat */
   DIVS(0, f0, 1, f1, 2, f2); /* divs */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_SingleFloat;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -902,9 +905,10 @@
   /* Here if argument TypeFixnum */
   DIVT(0, f0, 1, f1, 2, f2);
   CVTTQSVI(0, f0, f31, 0, f0);
+CHECK_OFLO32(f0);
   CVTQLV(0, f0, f31, 0, f0);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -927,7 +931,7 @@
   /* Here if argument TypeSingleFloat */
   DIVS(0, f0, 1, f1, 2, f2); /* divs */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_SingleFloat;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1014,12 +1018,27 @@
   r0 = (u64)&&return0060;
   goto binaryarithmeticdivisionprelude;
 return0060:
+#if 1
+  {
+    extern double floor(double);
+    double c = floor( FLTU64(1, f1) / FLTU64(2, f2) );
+    double d = FLTU64(1, f1) - (c * FLTU64(2, f2));
+    LDS(0, f0, (int)c);
+    LDT(3, f3, U64FLTT(d));
+//if (FLTU64(2, f2) != 250000.0) {
+//printf("alt: floor f1 %p %g, f2 %p %g\n", f1, FLTU64(1, f1), f2, FLTU64(2, f2));
+//printf("alt: floor c %g d %g, f0 %p, f3 %p\n", c, d, f0, f3);
+//}
+  }
+#else
   DIVT(0, f0, 1, f1, 2, f2);
   CVTTQVM(0, f0, f31, 0, f0);
   CVTQT(3, f3, f31, 0, f0);
   MULT(3, f3, 3, f3, 2, f2);
   SUBT(3, f3, 1, f1, 3, f3);
+CHECK_OFLO32(f0);
   CVTQLV(0, f0, f31, 0, f0);
+#endif
   /* Strip off any CDR code bits. */
   t8 = t3 & 63;
   t9 = (t8 == Type_Fixnum) ? 1 : 0;
@@ -1032,7 +1051,7 @@
   CVTTQ(3, f3, f31, 3, f3);
   CVTQL(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1060,7 +1079,7 @@
   /* Here if argument TypeSingleFloat */
   CVTTS(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1082,7 +1101,7 @@
     goto g7599;
   /* Here if argument TypeDoubleFloat */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   STT( (u64 *)&processor->fp0, 3, f3 );
   r0 = (u64)&&return0061;
   goto consdoublefloat;
@@ -1158,6 +1177,16 @@
   r0 = (u64)&&return0062;
   goto binaryarithmeticdivisionprelude;
 return0062:
+#if 1
+  {
+    extern double ceil(double);
+    double c = ceil( FLTU64(1, f1) / FLTU64(2, f2) );
+    double d = FLTU64(1, f1) - (c * FLTU64(2, f2));
+    LDS(0, f0, (int)c);
+    LDT(3, f3, U64FLTT(d));
+    //    printf("alt: ceil c %g d %g, f0 %p, f3 %p\n", c, d, f0, f3);
+  }
+#else
   CPYSN(2, f2, 2, f2, 2, f2);
   DIVT(0, f0, 1, f1, 2, f2);
   CVTTQVM(0, f0, f31, 0, f0);
@@ -1166,7 +1195,9 @@
   CVTTQ(0, f0, f31, 0, f0);
   MULT(3, f3, 3, f3, 2, f2);
   SUBT(3, f3, 1, f1, 3, f3);
+CHECK_OFLO32(f0);
   CVTQLV(0, f0, f31, 0, f0);
+#endif
   /* Strip off any CDR code bits. */
   t8 = t3 & 63;
   t9 = (t8 == Type_Fixnum) ? 1 : 0;
@@ -1179,7 +1210,7 @@
   CVTTQ(3, f3, f31, 3, f3);
   CVTQL(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1207,7 +1238,7 @@
   /* Here if argument TypeSingleFloat */
   CVTTS(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1229,7 +1260,7 @@
     goto g7607;
   /* Here if argument TypeDoubleFloat */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   STT( (u64 *)&processor->fp0, 3, f3 );
   r0 = (u64)&&return0063;
   goto consdoublefloat;
@@ -1310,6 +1341,7 @@
   CVTQT(3, f3, f31, 0, f0);
   MULT(3, f3, 3, f3, 2, f2);
   SUBT(3, f3, 1, f1, 3, f3);
+CHECK_OFLO32(f0);
   CVTQLV(0, f0, f31, 0, f0);
   /* Strip off any CDR code bits. */
   t8 = t3 & 63;
@@ -1323,7 +1355,7 @@
   CVTTQ(3, f3, f31, 3, f3);
   CVTQL(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1351,7 +1383,7 @@
   /* Here if argument TypeSingleFloat */
   CVTTS(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1373,7 +1405,7 @@
     goto g7615;
   /* Here if argument TypeDoubleFloat */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   STT( (u64 *)&processor->fp0, 3, f3 );
   r0 = (u64)&&return0065;
   goto consdoublefloat;
@@ -1454,6 +1486,7 @@
   CVTQT(3, f3, f31, 0, f0);
   MULT(3, f3, 3, f3, 2, f2);
   SUBT(3, f3, 1, f1, 3, f3);
+CHECK_OFLO32(f0);
   CVTQLV(0, f0, f31, 0, f0);
   /* Strip off any CDR code bits. */
   t8 = t3 & 63;
@@ -1467,7 +1500,7 @@
   CVTTQ(3, f3, f31, 3, f3);
   CVTQL(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1495,7 +1528,7 @@
   /* Here if argument TypeSingleFloat */
   CVTTS(3, f3, f31, 3, f3);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_Fixnum;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1517,7 +1550,7 @@
     goto g7623;
   /* Here if argument TypeDoubleFloat */
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   STT( (u64 *)&processor->fp0, 3, f3 );
   r0 = (u64)&&return0067;
   goto consdoublefloat;
@@ -1672,7 +1705,7 @@
     f2 = f1;
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_SingleFloat;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
@@ -1864,7 +1897,7 @@
     f2 = f1;
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   t8 = Type_SingleFloat;
   /* write the stack cache */
   *(u32 *)(iSP + 4) = t8;
--- xoutput13	2006-08-01 13:30:52.000000000 -0400
+++ output13	2006-07-30 06:47:17.000000000 -0400
@@ -240,7 +240,7 @@
   if (_trace) printf("greaterpmmexcfltflt:\n");
   SETFLTT(3,f3, FLTU64(1,f1) <= FLTU64(2,f2) ? 2.0:0);
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   iPC = *(u64 *)&(((CACHELINEP)iCP)->nextpcdata);
   iSP = (t7 * 8) + iSP;
   iCP = *(u64 *)&(((CACHELINEP)iCP)->nextcp);
--- xoutput21	2006-08-01 13:30:53.000000000 -0400
+++ output21	2006-07-30 06:47:17.000000000 -0400
@@ -402,8 +402,9 @@
     goto divbignumsteplose1;
   /* arg1+(ash arg2 32) */
   arg4 = arg3 | arg2;
-  /* t1 is now the quotient */
-  t1 = arg4 / arg1;
+/*(DIVQU arg4 arg1 t1 "t1 is now the quotient")*/
+t1 = arg4 / arg1;
+
   t2 = t1 * arg1;
   /* t2 is now the remainder */
   t2 = arg4 - t2;
--- xoutput24	2006-08-01 13:30:53.000000000 -0400
+++ output24	2006-08-01 13:17:59.000000000 -0400
@@ -150,7 +150,7 @@
   if ((s64)t7 < 0)
     goto g8895;
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   /* Store remaining length */
   *(u32 *)&processor->lclength = t7;
   t8 = (u32)arg2;
@@ -330,7 +330,7 @@
 g8898:
   if (_trace) printf("g8898:\n");
   /* Force the trap to occur here */
-  /* trapb force the trap to occur here */
+  /* trapb */
   /* There was no FP exception */
   t3 = *(u64 *)&(processor->niladdress);
 
